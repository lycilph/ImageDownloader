<metro:MetroWindow x:Class="ImageDownloader.Shell.Views.ShellView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:behaviors="http://metro.mahapps.com/winfx/xaml/shared"
                   xmlns:cal="http://www.caliburnproject.org"
                   xmlns:avalon="http://schemas.xceed.com/wpf/xaml/avalondock"
                   xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
                   xmlns:utils="clr-namespace:ImageDownloader.Shell.Utils"
                   GlowBrush="{DynamicResource AccentColorBrush}"
                   Height="600"
                   Width="800">
    <Window.Resources>
        <avalon:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <Style TargetType="avalonDockControls:AnchorablePaneTitle" BasedOn="{StaticResource {x:Type avalonDockControls:AnchorablePaneTitle}}">
            <Setter Property="BorderThickness" Value="0,3,0,0"/>
        </Style>
    </Window.Resources>

    <i:Interaction.Behaviors>
        <behaviors:BorderlessWindowBehavior AllowsTransparency="False"/>
        <behaviors:GlowWindowBehavior/>
    </i:Interaction.Behaviors>
    
    <metro:MetroWindow.WindowCommands>
        <metro:WindowCommands>
            <ItemsControl x:Name="FlyoutCommands">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <Button x:Name="ShowAbout" Content="About"/>
        </metro:WindowCommands>
    </metro:MetroWindow.WindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0"
              IsMainMenu="True">
            <MenuItem Header="_File">
                <MenuItem Header="_New"/>
                <MenuItem Header="E_xit"/>
            </MenuItem>
            <MenuItem Header="_Window">
                <MenuItem Header="_Start page"/>
                <MenuItem Header="_Opened windows"/>
                <MenuItem Header="_Log"/>
                <Separator/>
                <MenuItem Header="Window 1"/>
                <MenuItem Header="Window 2"/>
                <MenuItem Header="Window 3"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Options"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About"/>
            </MenuItem>
        </Menu>
        
        <avalon:DockingManager Grid.Row="1"
                               x:Name="docking_manager"
                               AllowMixedOrientation="True"
                               AnchorablesSource="{Binding Tools}"
                               DocumentsSource="{Binding Content}"
                               ActiveContent="{Binding ActiveItem, Mode=TwoWay}">
            <avalon:DockingManager.LayoutUpdateStrategy>
                <utils:LayoutStrategy/>
            </avalon:DockingManager.LayoutUpdateStrategy>
            
            <avalon:DockingManager.LayoutItemTemplate>
                <DataTemplate>
                    <ContentControl cal:View.Model="{Binding}" IsTabStop="False" />
                </DataTemplate>
            </avalon:DockingManager.LayoutItemTemplate>
            
            <avalon:DockingManager.LayoutItemContainerStyleSelector>
                <utils:PanesStyleSelector>
                    <utils:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type avalon:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.DisplayName}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                        </Style>
                    </utils:PanesStyleSelector.ToolStyle>
                    <utils:PanesStyleSelector.ContentStyle>
                        <Style TargetType="{x:Type avalon:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.DisplayName}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected}"/>
                        </Style>
                    </utils:PanesStyleSelector.ContentStyle>
                </utils:PanesStyleSelector>
            </avalon:DockingManager.LayoutItemContainerStyleSelector>
            
            <avalon:LayoutRoot>
                <avalon:LayoutPanel Orientation="Horizontal">
                    <avalon:LayoutPanel Orientation="Vertical">
                        <avalon:LayoutDocumentPane/>
                    </avalon:LayoutPanel>
                </avalon:LayoutPanel>
            </avalon:LayoutRoot>
        </avalon:DockingManager>
    </Grid>
</metro:MetroWindow>
